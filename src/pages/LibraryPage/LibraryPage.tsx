import React, {useState, useEffect} from 'react';
import { useNavigate } from 'react-router-dom';
import { Page } from '@/components/Page';
import { useContents, ContentItem } from '@/lib/supabase/hooks/useContents';
import { useFavorites } from '@/lib/supabase/hooks';
import './LibraryPage.css';
import {Link} from "@/components";
import { useUser } from '@/contexts';
import {supabase} from "@/lib/supabase/client.ts";
import {User} from "@/pages/AdminPage/types.ts";
// –û—Å–Ω–æ–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
const mainCategories = [
  { id: 'physical', name: '—Ç–µ–ª–æ', img: '/cat1.png', icon: 'üßò‚Äç‚ôÄÔ∏è', description: '–ê—Å–∞–Ω—ã –∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏' },
  { id: 'meditation', name: '–º–µ–¥–∏—Ç–∞—Ü–∏—è', img: '/cat2.png', icon: 'üß†', description: '–ü—Ä–∞–∫—Ç–∏–∫–∏ –æ—Å–æ–∑–Ω–∞–Ω–Ω–æ—Å—Ç–∏' },
  { id: 'base', name: '–±–∞–∑–∞', icon: '‚≠ê', img: '/cat3.png', description: '–û—Å–Ω–æ–≤—ã –∏ –±–∞–∑–æ–≤—ã–µ –Ω–∞–≤—ã–∫–∏' },
  { id: 'breathing', name: '–¥—ã—Ö–∞–Ω–∏–µ', img: '/cat1.png', icon: 'üå¨Ô∏è', description: '–î—ã—Ö–∞—Ç–µ–ª—å–Ω—ã–µ —Ç–µ—Ö–Ω–∏–∫–∏' }
];

// –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤–∫–ª—é—á–∞—è —Ñ–∏–ª—å—Ç—Ä—ã
const allCategories = [
  { id: 'all', name: '–≤—Å–µ' },
  ...mainCategories
];

const LibraryPage: React.FC = () => {
  const navigate = useNavigate();
  const [selectedCategory, setSelectedCategory] = useState<string | null>(null); // null = –≥–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞
  const [timeFilter, setTimeFilter] = useState<string | null>(null);
  const [showTimeFilter, setShowTimeFilter] = useState(false);
  const [contentVisible, setContentVisible] = useState(false);
  const [currentSlide, setCurrentSlide] = useState(0);

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  // const { supabaseUser } = useSupabaseUser(undefined);
  const { user, supabaseUser } = useUser();
  const userId = supabaseUser?.id || null;

  // –ü–æ–ª—É—á–∞–µ–º –∏–∑–±—Ä–∞–Ω–Ω–æ–µ
  const { isFavorite, addToFavorites, removeFromFavorites } = useFavorites(userId);

  // –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ç–µ–Ω—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è
  const { contents, loading, error } = useContents(selectedCategory !== null ? {
    categorySlug: selectedCategory && selectedCategory !== 'all' ? selectedCategory : undefined,
    duration: timeFilter ? getDurationRange(timeFilter) : undefined
  } : {});

  // –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è —Å–ª–∞–π–¥–µ—Ä–∞ "–ù–æ–≤–æ–µ" (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  const shouldLoadLatest = selectedCategory === null;
  const { contents: latestContents, loading: latestLoading } = useContents(shouldLoadLatest ? {} : { search: 'NEVER_MATCH_ANYTHING_XYZ' }); // Hack: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–∏—Å–∫ –∫–æ—Ç–æ—Ä—ã–π –Ω–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ—Ç –¥–ª—è –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏

  // –ü—Ä–∏–º–µ–Ω—è–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–æ—è–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
  useEffect(() => {
    const timer = setTimeout(() => {
      setContentVisible(true);
    }, 100);
    return () => clearTimeout(timer);
  }, []);

  // –ê–≤—Ç–æ–ø—Ä–æ–∏–≥—Ä—ã–≤–∞–Ω–∏–µ —Å–ª–∞–π–¥–µ—Ä–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
  useEffect(() => {
    if (selectedCategory === null && latestContents.length > 1) {
      const interval = setInterval(() => {
        setCurrentSlide(prev => (prev + 1) % Math.min(latestContents.length, 3));
      }, 5000); // –°–º–µ–Ω–∞ —Å–ª–∞–π–¥–∞ –∫–∞–∂–¥—ã–µ 5 —Å–µ–∫—É–Ω–¥
      
      return () => clearInterval(interval);
    }
  }, [selectedCategory, latestContents.length]);
  const [supaUser, setSupaUser] = useState<User | undefined>()
  useEffect(() => {
    if(user?.id){
      supabase?.from('users').select('*').eq('telegram_id', user.id).then(r => {
        setSupaUser(r.data![0])
      })
    }
  }, [user]);
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∏–∞–ø–∞–∑–æ–Ω–∞ –¥–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏—Å—Ö–æ–¥—è –∏–∑ —Ñ–∏–ª—å—Ç—Ä–∞
  function getDurationRange(timeFilter: string): { min: number, max: number } | undefined {
    switch (timeFilter) {
      case 'under7': return { min: 0, max: 7 * 60 };
      case '7-20': return { min: 7 * 60, max: 20 * 60 };
      case '20-40': return { min: 20 * 60, max: 40 * 60 };
      case '40-60': return { min: 40 * 60, max: 60 * 60 };
      default: return undefined;
    }
  }

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–π –º–µ—Ç–∫–∏ —Ñ–∏–ª—å—Ç—Ä–∞ –≤—Ä–µ–º–µ–Ω–∏
  function getTimeFilterLabel(timeFilter: string): string {
    switch (timeFilter) {
      case 'under7': return '–¥–æ 7 –º–∏–Ω';
      case '7-20': return '7-20 –º–∏–Ω';
      case '20-40': return '20-40 –º–∏–Ω';
      case '40-60': return '40-60 –º–∏–Ω';
      default: return '–í—Ä–µ–º—è';
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ (–ø–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ø–∏—Å–∫—É –ø—Ä–∞–∫—Ç–∏–∫)
  const handleMainCategorySelect = (categoryId: string) => {
    setSelectedCategory(categoryId);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –≤ —Ñ–∏–ª—å—Ç—Ä–∞—Ö
  const handleSubCategorySelect = (categoryId: string) => {
    setSelectedCategory(categoryId);
  };

  // –í–æ–∑–≤—Ä–∞—Ç –∫ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
  const handleBackToMain = () => {
    setSelectedCategory(null);
    setTimeFilter(null);
    setShowTimeFilter(false);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–π –ø—Ä–∞–∫—Ç–∏–∫–µ
  const handlePracticeSelect = (practice: ContentItem) => {
    console.log(practice)
    if(practice.audio_file_path){
      navigate(`/practice/audio/${practice.id}`);
      return
    }

    if(((practice?.power_needed && practice?.power_needed !== null) ? practice?.power_needed : 2) <= (supaUser?.power || -1)){
      navigate(`/practice/${practice.id}`);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
  const handleToggleFavorite = (e: React.MouseEvent, practiceId: string) => {
    e.stopPropagation();
    if (!userId) return;

    if (isFavorite(practiceId)) {
      removeFromFavorites(practiceId);
    } else {
      addToFavorites(practiceId);
    }
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ—Ö–æ–¥–∞ –∫ –∏–∑–±—Ä–∞–Ω–Ω–æ–º—É
  const handleFavoritesClick = () => {
    navigate('/library/favorites');
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const toggleTimeFilter = () => {
    setShowTimeFilter(!showTimeFilter);
  };

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ñ–∏–ª—å—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏
  const handleTimeFilterSelect = (filter: string) => {
    setTimeFilter(filter);
    setShowTimeFilter(false);
  };
  // –ü–æ–ª—É—á–∞–µ–º initData –∏–∑ Telegram SDK
  // const initDataState = useSignal(_initDataState);

  // const user = useMemo(() =>
  //         initDataState && initDataState.user ? initDataState.user : undefined,
  //     [initDataState]);
  // –ï—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –≤—ã–±—Ä–∞–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
  if (selectedCategory === null) {
    return (
        <Page back={false}>
          {user && <div className="!py-2 !px-4 flex justify-between items-center border-b border-black">
            <Link to={'/'} >
              {user.photo_url ? (
                  <img className={'w-6 h-6 rounded-full border border-black'} src={user.photo_url}
                       alt={user.username || user.first_name} loading="lazy"/>
              ) : (
                  <div className="w-6 h-6 rounded-full !bg-gray-200 flex items-center justify-center"
                       aria-hidden="true">
                    {user.first_name.charAt(0)}
                  </div>
              )}
            </Link>

            <img src={'/logo.svg'} alt={''}/>
            <img src={'/settings.svg'} alt={''}/>


          </div>}
          <div>


            {/* –°–ª–∞–π–¥–µ—Ä "–ù–æ–≤–æ–µ" */}
            <div>

              {latestLoading ? (
                  <div className="latest-loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
              ) : latestContents.length > 0 ? (
                  <div className="latest-slider-container">
                    <div className="flex flex-col h-[260px] bg-cover" style={{backgroundImage: `url(${latestContents[currentSlide]?.thumbnail_url || '/img/practice-default.jpg'})`}}
                         onClick={() => handlePracticeSelect(latestContents[currentSlide])}>
                      <div
                          className="latest-card-image"

                      >
                      </div>
                      <div className="latest-card-content">
                        <div className="flex items-center gap-2">
                          <p style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className={'text-sm !py-1 !px-2 bg-[#414141] text-white border border-black'}>{Math.floor(latestContents[currentSlide]?.duration / 60)} –º–∏–Ω</p>
                          <p style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className={'text-sm !py-1 !px-2 bg-[#414141] text-white border border-black'}>{latestContents[currentSlide]?.categories?.name || '–ü—Ä–∞–∫—Ç–∏–∫–∞'}</p>
                        </div>
                        <h3 style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className="text-white font-bold text-2xl !mb-2">{latestContents[currentSlide]?.title}</h3>

                      </div>
                    </div>

                    {/* –ü–∞–≥–∏–Ω–∞—Ü–∏—è —Ç–æ—á–∫–∞–º–∏ */}
                    {latestContents.slice(0, 3).length > 1 && (
                        <div className="slider-dots absolute bottom-2 left-1/2 -translate-x-1/2">
                          {latestContents.slice(0, 3).map((_, index) => (
                              <button
                                  key={index}
                                  className={`slider-dot ${index === currentSlide ? 'active' : ''}`}
                                  onClick={() => setCurrentSlide(index)}
                              />
                          ))}
                        </div>
                    )}
                  </div>
              ) : null}
            </div>

            {/* –ì–ª–∞–≤–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
            <div>
              {mainCategories.map(category => (
                  <div className={'!p-4 border-b border-black'} key={category.id}>
                    <div className={'flex flex-col gap-3'} onClick={() => handleMainCategorySelect(category.id)}>

                      <div className={'flex items-center justify-between gap-2'}>
                        <h3 style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className="font-bold text-2xl !text-black">{category.name}</h3>
                        <p style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className={'text-[#191919]/40 underline underline-offset-4 cursor-pointer'}>–≤—Å–µ –ø—Ä–∞–∫—Ç–∏–∫–∏</p>
                      </div>
                      <p className=" text-[#191919]">{category.description}</p>
                      <img src={category.img} className={''}/>
                    </div>
                  </div>
              ))}
            </div>

            {/* –†–∞–∑–¥–µ–ª –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ */}
            <div className={'!p-5 border-b border-black'}>
              <div className={'flex justify-center'} onClick={handleFavoritesClick}>
                <h3 className="font-bold !text-black underline underline-offset-3" style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }}>–∏–∑–±—Ä–∞–Ω–Ω–æ–µ</h3>
              </div>
            </div>
          </div>
        </Page>
    );
  }
  console.log(supaUser)
  // –°—Ç—Ä–∞–Ω–∏—Ü–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Å –ø—Ä–∞–∫—Ç–∏–∫–∞–º–∏
  return (
      <Page back={true} onBackClick={handleBackToMain}>
        {/* Header —Å —Ñ–æ—Ç–æ –ø—Ä–æ—Ñ–∏–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
        {user && <div className="!py-2 !px-4 flex justify-between items-center border-b border-black">
          <Link to={'/'} >
            {user.photo_url ? (
                <img className={'w-6 h-6 rounded-full border border-black'} src={user.photo_url}
                     alt={user.username || user.first_name} loading="lazy"/>
            ) : (
                <div className="w-6 h-6 rounded-full !bg-gray-200 flex items-center justify-center"
                     aria-hidden="true">
                  {user.first_name.charAt(0)}
                </div>
            )}
          </Link>

          <img src={'/logo.svg'} alt={''}/>
          <img src={'/settings.svg'} alt={''}/>
        </div>}

        <div className={`library-container ${contentVisible ? 'content-visible' : ''}`}>
          <div className="!px-3 flex items-center gap-2 justify-between !mb-4 !text-[#191919]">
            <h1 style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className="font-bold text-2xl ">
              {allCategories.find(cat => cat.id === selectedCategory)?.name || '–ö–∞—Ç–µ–≥–æ—Ä–∏—è'}
            </h1>
            <div style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }} className="time-filter-toggle !bg-transparent" onClick={toggleTimeFilter}>
              {timeFilter ? getTimeFilterLabel(timeFilter) : '–≤—Ä–µ–º—è'} <svg className={`duration-200 ${showTimeFilter ? "rotate-180" : ''}`} width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M15 11L12 14L9 11" stroke="#191919" stroke-width="1.5" stroke-linecap="round"
                    stroke-linejoin="round"/>
            </svg>
            </div>
          </div>

          {/* –§–∏–ª—å—Ç—Ä –ø–æ –≤—Ä–µ–º–µ–Ω–∏ */}
          {showTimeFilter && (
              <div className="time-filter-dropdown">
                <button
                    onClick={() => handleTimeFilterSelect('under7')}
              className={timeFilter === 'under7' ? 'active' : ''}
            >
              –¥–æ 7 –º–∏–Ω—É—Ç
            </button>
            <button 
              onClick={() => handleTimeFilterSelect('7-20')}
              className={timeFilter === '7-20' ? 'active' : ''}
            >
              7-20 –º–∏–Ω—É—Ç
            </button>
            <button 
              onClick={() => handleTimeFilterSelect('20-40')}
              className={timeFilter === '20-40' ? 'active' : ''}
            >
              20-40 –º–∏–Ω—É—Ç
            </button>
            <button 
              onClick={() => handleTimeFilterSelect('40-60')}
              className={timeFilter === '40-60' ? 'active' : ''}
            >
              40-60 –º–∏–Ω—É—Ç
            </button>
            {timeFilter && (
              <button onClick={() => setTimeFilter(null)}>–°–±—Ä–æ—Å–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä</button>
            )}
          </div>
        )}
        
        {/* –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
        <div className="category-tabs !px-3 ">
          {allCategories.map(cat => (
            <button
              key={cat.id}
              style={{ fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em' }}
              className={`cursor-pointer !py-2 !px-4 text-[#191919] bg-[#F1F1F1] ${selectedCategory === cat.id ? '!bg-[#191919] text-white' : ''}`}
              onClick={() => handleSubCategorySelect(cat.id)}
            >
              {cat.name}
            </button>
          ))}
        </div>
        {/* –ö–æ–Ω—Ç–µ–Ω—Ç –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ */}
        <div className="library-content border-b border-black">
          {loading ? (
            <div className="library-loading">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
          ) : error ? (
            <div className="library-error">–û—à–∏–±–∫–∞: {error}</div>
          ) : contents.length === 0 ? (
            <div className="library-empty">
              {timeFilter 
                ? '–ù–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º –≤—Ä–µ–º–µ–Ω–µ–º' 
                : '–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç –ø—Ä–∞–∫—Ç–∏–∫'}
            </div>
          ) : (
            <div className="practice-list">

              {contents.map((item: ContentItem) => {
                return (
                    <div
                        key={item.id}
                        className="flex flex-col gap-3 !py-4 !px-3 border-t border-black"
                        onClick={() => handlePracticeSelect(item)}
                    >
                      <div
                          className="practice-full-thumbnail"
                          style={{backgroundImage: `url(${item.thumbnail_url || '/img/practice-default.jpg'})`}}
                      >
                      </div>
                      <div className="flex flex-col gap-3">
                        <div className="flex justify-between items-start gap-4">
                          <h3 className="text-xl text-black font-bold"
                              style={{fontFamily: 'RF Dewi, sans-serif', letterSpacing: '-0.07em'}}>{item.title}</h3>
                          {((item.power_needed && item.power_needed !== null) ? item.power_needed : 2) <= (supaUser?.power || -1) ? <img
                              onClick={(e) => handleToggleFavorite(e, item.id)}
                              src={isFavorite(item.id) ? "/flag-filled.svg" : "/flag-empty.svg"}
                              alt={isFavorite(item.id) ? "–£–±—Ä–∞—Ç—å –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ" : "–î–æ–±–∞–≤–∏—Ç—å –≤ –∏–∑–±—Ä–∞–Ω–Ω–æ–µ"}
                              className={`!mt-[2px] favorite-flag-icon cursor-pointer ${isFavorite(item.id) ? 'favorited' : ''}`}
                          /> : <svg width="24" height="24" viewBox="0 0 24 24" fill="none"
                                    xmlns="http://www.w3.org/2000/svg">
                            <path
                                d="M9.23047 9H7.2002C6.08009 9 5.51962 9 5.0918 9.21799C4.71547 9.40973 4.40973 9.71547 4.21799 10.0918C4 10.5196 4 11.0801 4 12.2002V17.8002C4 18.9203 4 19.4801 4.21799 19.9079C4.40973 20.2842 4.71547 20.5905 5.0918 20.7822C5.5192 21 6.07902 21 7.19694 21H16.8031C17.921 21 18.48 21 18.9074 20.7822C19.2837 20.5905 19.5905 20.2842 19.7822 19.9079C20 19.4805 20 18.9215 20 17.8036V12.1969C20 11.079 20 10.5192 19.7822 10.0918C19.5905 9.71547 19.2837 9.40973 18.9074 9.21799C18.4796 9 17.9203 9 16.8002 9H14.7689M9.23047 9H14.7689M9.23047 9C9.10302 9 9 8.89668 9 8.76923V6C9 4.34315 10.3431 3 12 3C13.6569 3 15 4.34315 15 6V8.76923C15 8.89668 14.8964 9 14.7689 9"
                                stroke="#191919" stroke-width="1.5" stroke-linecap="round" stroke-linejoin="round"/>
                          </svg>
                          }
                        </div>
                        <div className="practice-full-tags">
                          <span className="practice-tag">{Number(item.difficulty) || 2} —Å–∏–ª—ã</span>
                          <span
                              className="practice-tag">{Math.floor(item.duration / 60)} –º–∏–Ω—É—Ç</span>
                          <span className="practice-tag">{item.categories?.name || '–ø—Ä–∞–∫—Ç–∏–∫–∞'}</span>
                        </div>
                      </div>
                    </div>
                )
              })}
            </div>
          )}
        </div>
        </div>
      </Page>
  );
};

export default LibraryPage; 